{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorMessage/ErrorMessage.js","services/apiService.js","App.js","index.js"],"names":["Searchbar","state","query","handlChangeQuery","e","setState","currentTarget","name","value","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","onOpen","onClick","largeImageURL","src","webformatURL","alt","tags","ImageGallery","images","map","index","Loader","color","height","width","timeout","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","ErrorMessage","message","axios","defaults","baseURL","getPictures","page","get","then","resp","data","hits","App","setOfImages","bigImg","showModal","status","handleSearchbarSubmit","arr","catch","finally","loading","resetState","img","prevState","openModal","closeModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d220c567.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handlChangeQuery = e => {\n    // console.log(e.currentTarget.value);\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.query.trim() === '') {\n      toast.error('Nothing for request! Please type the word');\n      return;\n    }\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handlChangeQuery}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"query\"\n            value={this.query}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport { Searchbar };\n","import React from 'react';\n\nfunction ImageGalleryItem({ image, onOpen }) {\n  // console.log(image);\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => onOpen(image.largeImageURL)}\n    >\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nexport { ImageGalleryItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onOpen }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <ImageGalleryItem image={image} key={index} onOpen={onOpen} />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      largeImageURL: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onOpen: PropTypes.func.isRequired,\n};\n\nexport { ImageGallery };\n","import NewLoader from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <NewLoader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={80}\n        width={80}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n\nexport { Loader };\n","import React from 'react';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <div className=\"containerButton\">\n      <button type=\"button\" className=\"button\" onClick={onLoadMore}>\n        load more\n      </button>\n    </div>\n  );\n}\n\nexport { Button };\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    // console.log('Modal componentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      console.log('Нажали ESC, нужно закрыть модалку');\n\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    // console.log('Кликнули в бекдроп');\n\n    // console.log('currentTarget: ', event.currentTarget);\n    // console.log('target: ', event.target);\n\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img\n            src={this.props.src}\n            alt={this.props.alt}\n            width=\"1200px\"\n            height=\"800px\"\n          />\n          {/* {this.props.children} */}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport { Modal };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport { ErrorMessage };\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst API_KEY = '23028809-0eadab1d20ccc1cb386303aa3';\n\nexport function getPictures(query, page) {\n  return axios\n    .get(\n      `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`,\n    )\n    .then(resp => resp.data.hits);\n}\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { Loader } from './components/Loader/Loader';\nimport { Button } from './components/Button/Button';\nimport { Modal } from './components/Modal/Modal';\nimport { ErrorMessage } from './components/ErrorMessage/ErrorMessage';\nimport { getPictures } from './services/apiService';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    query: '',\n    setOfImages: [],\n    page: 1,\n    bigImg: null,\n    showModal: false,\n    status: 'idle',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.page > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleSearchbarSubmit = query => {\n    this.setState({ query, status: 'pending', page: 1 });\n    getPictures(query, 1)\n      .then(arr => this.setState({ setOfImages: arr }))\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  resetState = () => {\n    this.setState({\n      setOfImages: [],\n      page: 1,\n      error: null,\n    });\n  };\n\n  onLoadMore = () => {\n    const { query, page } = this.state;\n    getPictures(query, page + 1).then(img =>\n      this.setState(prevState => ({\n        setOfImages: [...prevState.setOfImages, ...img],\n        page: prevState.page + 1,\n        status: 'resolved',\n      })),\n    );\n  };\n\n  openModal = largeImageURL => {\n    this.setState({\n      showModal: true,\n      bigImg: largeImageURL,\n    });\n  };\n\n  closeModal = () => this.setState({ showModal: false });\n\n  // toggleModal = largeImageURL => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n  //   this.setState({ bigImg: largeImageURL });\n  // };\n\n  render() {\n    return (\n      <div>\n        <Searchbar\n          query={this.state.query}\n          onSubmit={this.handleSearchbarSubmit}\n          resetState={this.resetState}\n        />\n\n        <ImageGallery\n          images={this.state.setOfImages}\n          page={this.state.page}\n          onOpen={this.openModal}\n          // onOpen={this.toggleModal}\n        />\n\n        {this.state.status === 'pending' && <Loader />}\n\n        {this.state.setOfImages.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n        {this.state.showModal && (\n          <Modal\n            onClose={this.closeModal}\n            // onClose={this.toggleModal}\n            src={this.state.bigImg}\n            alt={this.state.query}\n          />\n        )}\n        <ToastContainer autoClose={2000} />\n        {this.state.status === 'rejected' && (\n          <ErrorMessage message={this.state.error} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}